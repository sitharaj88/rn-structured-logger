"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[3976],{2053:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"intro","title":"intro","description":"---","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/rn-structured-logger/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/sitharaj88/rn-structured-logger/edit/master/docs-site/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Tutorial - Basics","permalink":"/rn-structured-logger/docs/category/tutorial---basics"}}');var i=r(4848),s=r(8453);const o={sidebar_position:1},l=void 0,a={},d=[{value:"sidebar_label: Getting Started",id:"sidebar_label-getting-started",level:2},{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Peer Dependencies",id:"peer-dependencies",level:3},{value:"Quick Start",id:"quick-start",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Simple Logging",id:"simple-logging",level:3},{value:"Logging with Context",id:"logging-with-context",level:3},{value:"Namespaced Loggers",id:"namespaced-loggers",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Basic Configuration",id:"basic-configuration",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:3},{value:"Platform Support",id:"platform-support",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Need Help?",id:"need-help",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"sidebar_label-getting-started",children:"sidebar_label: Getting Started"}),"\n",(0,i.jsx)(n.h1,{id:"getting-started-with-rn-structured-logger",children:"Getting Started with RN Structured Logger"}),"\n",(0,i.jsx)(n.p,{children:"RN Structured Logger is an enterprise-grade logging library for React Native and Expo applications. It provides structured logs, namespaces, context injection, batching, rate limiting, and redaction out of the box."}),"\n",(0,i.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Structured log records"})," with timestamps, levels, messages, namespaces, and context"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pluggable transports"})," for console, file system, Sentry, and custom endpoints"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Namespace support"})," for organized, hierarchical logging"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Context injection"})," for correlation IDs and device metadata"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automatic redaction"})," of sensitive data (passwords, tokens, emails)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rate limiting and sampling"})," to control log volume"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Batching and async flushing"})," for optimal performance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Console patching"})," for third-party library compatibility"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TypeScript support"})," with full type safety"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install rn-structured-logger\n# or\nyarn add rn-structured-logger\n"})}),"\n",(0,i.jsx)(n.h3,{id:"peer-dependencies",children:"Peer Dependencies"}),"\n",(0,i.jsx)(n.p,{children:"Install these peer dependencies based on the transports you need:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# For file logging on native platforms\nnpm install react-native-fs\n\n# For Sentry integration\nnpm install @sentry/react-native\n\n# For Expo device info (optional)\nnpm install expo-device\n"})}),"\n",(0,i.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { initLogger, getLogger, ConsoleTransport } from 'rn-structured-logger';\n\n// Initialize the logger once at app startup\ninitLogger({\n  level: 'info',\n  transports: [ConsoleTransport],\n});\n\n// Get a logger instance and start logging\nconst logger = getLogger('app');\nlogger.info('Application started successfully');\n"})}),"\n",(0,i.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,i.jsx)(n.h3,{id:"simple-logging",children:"Simple Logging"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { getLogger } from 'rn-structured-logger';\n\nconst logger = getLogger();\n\n// Log different severity levels\nlogger.trace('Detailed trace information');\nlogger.debug('Debug information for development');\nlogger.info('General information about app operation');\nlogger.warn('Warning about potential issues');\nlogger.error('Error that occurred');\nlogger.fatal('Critical error requiring immediate attention');\n"})}),"\n",(0,i.jsx)(n.h3,{id:"logging-with-context",children:"Logging with Context"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const logger = getLogger('user');\n\n// Add structured context to your logs\nlogger.info('User login successful', {\n  userId: 12345,\n  loginMethod: 'email',\n  timestamp: new Date().toISOString(),\n  userAgent: 'Mobile App v1.0'\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"namespaced-loggers",children:"Namespaced Loggers"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Create organized logger hierarchy\nconst authLogger = getLogger('auth');\nconst apiLogger = getLogger('api');\nconst uiLogger = getLogger('ui');\n\n// Each logger will have its namespace in the output\nauthLogger.info('User authentication started');\napiLogger.debug('API request to /users/profile');\nuiLogger.warn('Component failed to render');\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"basic-configuration",children:"Basic Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { initLogger, ConsoleTransport, FileTransport } from 'rn-structured-logger';\n\ninitLogger({\n  level: __DEV__ ? 'debug' : 'info', // Dynamic level based on environment\n  transports: [\n    ConsoleTransport, // Always include console logging\n    // Add file logging only in production on native platforms\n    ...(__DEV__ ? [] : [FileTransport({ fileName: 'app.log' })]),\n  ],\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { initLogger, ConsoleTransport, FileTransport, SentryTransport, makeRedactor } from 'rn-structured-logger';\n\ninitLogger({\n  level: 'info',\n  transports: [\n    ConsoleTransport,\n    FileTransport({\n      fileName: 'app.log',\n      maxBytes: 1024 * 1024, // 1MB rotation\n    }),\n    SentryTransport(), // Send errors to Sentry\n  ],\n  redactor: makeRedactor(['password', 'token', 'email', 'ssn']), // Auto-redact sensitive data\n  sampling: { rate: 0.1 }, // Sample 10% of non-error logs in production\n  rateLimit: { maxPerMin: 300 }, // Limit to 300 logs per minute\n  batch: { size: 50, intervalMs: 2000 }, // Batch 50 logs every 2 seconds\n  device: {\n    appVersion: '1.0.0',\n    platform: Platform.OS,\n    // Add more device context as needed\n  },\n  patchConsole: true, // Redirect console.log to logger\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"platform-support",children:"Platform Support"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Platform"}),(0,i.jsx)(n.th,{children:"Console Transport"}),(0,i.jsx)(n.th,{children:"File Transport"}),(0,i.jsx)(n.th,{children:"Sentry Transport"}),(0,i.jsx)(n.th,{children:"Custom Transport"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"iOS"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Android"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Web (Expo)"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"macOS"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Windows"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/rn-structured-logger/docs/api-reference",children:"API Reference"})})," - Complete API documentation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/rn-structured-logger/docs/examples",children:"Examples"})})," - Real-world usage examples"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"need-help",children:"Need Help?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\ud83d\udcd6 ",(0,i.jsx)(n.a,{href:"/rn-structured-logger/docs/api-reference",children:"API Reference"})," - Complete technical documentation"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udcac ",(0,i.jsx)(n.a,{href:"https://github.com/sitharaj88/rn-structured-logger/discussions",children:"GitHub Discussions"})," - Ask questions and share ideas"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udc1b ",(0,i.jsx)(n.a,{href:"https://github.com/sitharaj88/rn-structured-logger/issues",children:"GitHub Issues"})," - Report bugs and request features"]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var t=r(6540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);